<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.up.feast.mapper.GoodCarDAO">
    <resultMap id="BaseResultMap" type="com.up.feast.model.GoodCar">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="good_id" jdbcType="BIGINT" property="goodId"/>
        <result column="good_name" jdbcType="VARCHAR" property="goodName"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="merchant_id" jdbcType="BIGINT" property="merchantId"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="mobile" jdbcType="VARCHAR" property="mobile"/>
        <result column="amount" jdbcType="SMALLINT" property="amount"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, good_id, good_name, user_id, merchant_id, `location`, mobile, amount, price
  </sql>
    <select id="selectByExample" parameterType="com.up.feast.model.GoodCarExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from g_good_car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from g_good_car
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from g_good_car
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.up.feast.model.GoodCarExample">
        delete from g_good_car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.up.feast.model.GoodCar"
            useGeneratedKeys="true">
    insert into g_good_car (good_id, good_name, user_id, 
      merchant_id, `location`, mobile, 
      amount, price)
    values (#{goodId,jdbcType=BIGINT}, #{goodName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, 
      #{merchantId,jdbcType=BIGINT}, #{location,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{amount,jdbcType=SMALLINT}, #{price,jdbcType=DECIMAL})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.up.feast.model.GoodCar"
            useGeneratedKeys="true">
        insert into g_good_car
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodId != null">
                good_id,
            </if>
            <if test="goodName != null">
                good_name,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="merchantId != null">
                merchant_id,
            </if>
            <if test="location != null">
                `location`,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="amount != null">
                amount,
            </if>
            <if test="price != null">
                price,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodId != null">
                #{goodId,jdbcType=BIGINT},
            </if>
            <if test="goodName != null">
                #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="merchantId != null">
                #{merchantId,jdbcType=BIGINT},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                #{amount,jdbcType=SMALLINT},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.up.feast.model.GoodCarExample" resultType="java.lang.Long">
        select count(*) from g_good_car
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update g_good_car
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.goodId != null">
                good_id = #{record.goodId,jdbcType=BIGINT},
            </if>
            <if test="record.goodName != null">
                good_name = #{record.goodName,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.merchantId != null">
                merchant_id = #{record.merchantId,jdbcType=BIGINT},
            </if>
            <if test="record.location != null">
                `location` = #{record.location,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.amount != null">
                amount = #{record.amount,jdbcType=SMALLINT},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update g_good_car
        set id = #{record.id,jdbcType=BIGINT},
        good_id = #{record.goodId,jdbcType=BIGINT},
        good_name = #{record.goodName,jdbcType=VARCHAR},
        user_id = #{record.userId,jdbcType=BIGINT},
        merchant_id = #{record.merchantId,jdbcType=BIGINT},
        `location` = #{record.location,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        amount = #{record.amount,jdbcType=SMALLINT},
        price = #{record.price,jdbcType=DECIMAL}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.up.feast.model.GoodCar">
        update g_good_car
        <set>
            <if test="goodId != null">
                good_id = #{goodId,jdbcType=BIGINT},
            </if>
            <if test="goodName != null">
                good_name = #{goodName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="merchantId != null">
                merchant_id = #{merchantId,jdbcType=BIGINT},
            </if>
            <if test="location != null">
                `location` = #{location,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="amount != null">
                amount = #{amount,jdbcType=SMALLINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.up.feast.model.GoodCar">
    update g_good_car
    set good_id = #{goodId,jdbcType=BIGINT},
      good_name = #{goodName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=BIGINT},
      merchant_id = #{merchantId,jdbcType=BIGINT},
      `location` = #{location,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=SMALLINT},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <select id="selectByUserIdAndMerchantId" parameterType="GoodCar" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from g_good_car
        where user_id = #{userId,jdbcType=BIGINT} and merchant_id = #{merchantId,jdbcType=BIGINT}
    </select>
</mapper>